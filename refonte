********************************************************************
* YSI540   Programme de création d'un courrier dynamique via appel *
*          service web Poster. Le document est génée dans l'IFS de *
*          l'AS400 (répertorie /gedpdf) puis transfére             *
*          vers un répertoire windows                              *
********************************************************************
* Création le 21/12/2021 par Christian MILFORT                     *
*            !                                                     *
* Modif.     ! 01/02/2022, C.MILFORT                               *
*            !                                                     *
*            !                                                     *
* Indicateurs!                                                     *
*            !                                                     *
*            !                                                     *
*            !                                                     *
* Indic. pgm ! PG_àXXX  : XXX                                      *
*            !                                                     *
* Erreur     ! PG_àXXX  : 'X' = XXXXXX                             *
*            !                                                     *
********************************************************************
*            !                                                     *
* Compilat°  ! Infosds programme : .xxxxxxx                        *
*            ! Ouverture fich.   : .xxxxxxx + xxxxxxxx             *
*            ! Infosds fichier   : .xxxxxxxx                       *
********************************************************************
* Paramètres :                                                     *
* WW_TYP_SUA : Année de survenance
* WW_TYP_NUM : Numéro de Sinistre
* WW_TYP_SBR : Sous-Branche
* WW_TYP_TDS : Type de destinataire  
* WW_TYP_LET : Code Lettre
* WW_TYP_IDS : Id Destinataire
* WW_TYP_TYI : Type Intervenant
* WW_TYP_TLT : Type Lettre                                    *

********************************************************************
* Les paramètres nécessaires au PGM YYY214
ALPHA(7) WW_TYP_LET  
ALPHA(128) P_REFERENCE
ALPHA(64) W_NOM_SIGNET
ALPHA(950) W_VALEUR_SIGNET
LISTE P_LSM_SIGNETS W_NOM_SIGNET W_VALEUR_SIGNET
ALPHA(512) P_NOM_FICHIER
ALPHA(512) P_FICHIER_UNIQUE
ALPHA(3)  P_CODE_RETOUR
ALPHA(3)  P_TYPE_DOCUMENT 

* variables de travail
ALPHA(9)   WW_TYP_IPB
NUM_P(4,0) WW_TYP_SUA
NUM_P(5,0) WW_TYP_NUM
ALPHA(3)   WW_TYP_SBR
ALPHA(2)   WW_TYP_TDS
ALPHA(2)   WW_TYP_TYI
ALPHA(1)   WW_TYP_TLT
NUM_P(7,0) WW_TYP_CHR
NUM_P(7,0) WW_TYP_BNC
NUM_P(7,0) WW_TYP_BNT
ALPHA(2)   WW_TYP_BND
ALPHA(5)   WW_TYP_CPO
ALPHA(26)  WW_TYP_VIL
ALPHA(32)  WW_TYP_AD1
ALPHA(40)  WW_TYP_AFFAIRE
ALPHA(10)  WW_TYP_DATE_SIN
NUM_P(11,0)  WW_TYP_SOMME
NUM_P(11,2)  WW_TYP_FRANCHISE
ALPHA(26)  WW_TYP_VIL_SIN
ALPHA(5)   WW_TYP_CAUSE
ALPHA(40)  WW_TYP_LIBELLE
ALPHA(70)  WW_TYP_DESIGNATION
ALPHA(40)  WW_TYP_EXPERT
ALPHA(40)  WW_TYP_DESTINATAIRE
NUM_P(7,0) WW_TYP_IDS   
NUM_P(7,0) W_ASSNOM_IAS
ALPHA(20)  WW_ALP_20
ALPHA(200) WW_NOM_FICHIER_PDF
ALPHA(200) WW_NOM_FICHIER_DOC
ALPHA(200) W_DOCLNCCHD
ALPHA(200) WW_TYP_FILE
ALPHA(128) WP_NOM_FICHIER_IFS
ALPHA(128) WP_NOM_FICHIER_WINDOWS
ALPHA(256) WW_ALP_CMD
ALPHA(1)   ZW_OPTION
NUM_E(9,0) W_NUM_NB_ENREG
ALPHA(12)  W_COMPTEUR
NUM_P(3,0) WW_TYP_NUC 
ALPHA(1) PS1_OPT
NUM_P(7,0) WW_EC_IDS
ALPHA(1) PG_F08
NUM_P(7,0) WW_TYP_COU
ALPHA(2)   WW_TYP_TEV
* Reception Paramètres pour l'appel du PGM YSI540
PARAM WW_TYP_SUA WW_TYP_NUM WW_TYP_SBR WW_TYP_TDS WW_TYP_LET WW_TYP_IDS WW_TYP_TYI WW_TYP_TLT WW_TYP_NUC PS1_OPT PG_F08 WW_TYP_COU WW_TYP_TEV

* Variables extraction numérique en alpha WW_TYP_SUA
ALPHA(4)   WW_TYP_SUA_ALPHA
ALPHA(2)   WWDATE2
NUM_P(1,0) WWDEBUT
NUM_P(1,0) WWLONGUEUR

* Variables Date du Jour
ALPHA(20)  WW_TYP_DATECREATION

* Déclaration des variables
ALPHA(10)  WW_UTILISATEUR
ALPHA(5)   W_CONCEPT
ALPHA(5)   W_FAMILLE
ALPHA(15)  W_CODE
NUM_P(7,0) K51_IAS
NUM_P(5,0) K52_ICT
NUM_P(5,0) K53_ICN
NUM_P(7,0) K59_IDN
NUM_P(4,0) K19_SUA
NUM_P(5,0) K19_NUM
ALPHA(3)   K19_SBR
ALPHA(2)   K19_TDS
ALPHA(2)   K19_TYL
NUM_P(7,0) K19_COL
NUM_P(5,0) K54_IIN
NUM_P(4,0) PG_ASI
NUM_P(5,0) PG_NSI
ALPHA(3)   PG_SSI

*Variables Gestionnaire
ALPHA(40) NOM_GESTIONNAIRE
ALPHA(20) PRN_GESTIONNAIRE
ALPHA(13) TEL_GESTIONNAIRE
ALPHA(75) MAIL_GESTIONNAIRE
ALPHA(20) CIV_GESTIONNAIRE

*VARIABLES PROCEDURE RECIDS
ALPHA(2)   PG_TDS

ALPHA(32)  WW_TYP_EXPAD1
ALPHA(32)  WW_TYP_EXPAD2
ALPHA(5)   WW_TYP_EXPCPO
ALPHA(26)  WW_TYP_EXPVIL
NUM_P(5,0)  WW_TYP_COURTIERID

ALPHA(40) WW_TYP_AVOCAT
ALPHA(32) WW_TYP_AVOAD1
ALPHA(32) WW_TYP_AVOAD2
ALPHA(5)  WW_TYP_AVOCPO
ALPHA(26) WW_TYP_AVOVIL

ALPHA(40)  WW_TYP_INTERLOC
ALPHA(32)  WW_TYP_INTERLOCAD1
ALPHA(32)  WW_TYP_INTERLOCAD2
ALPHA(5)   WW_TYP_INTERLOCCPO
ALPHA(26)  WW_TYP_INTERLOCVIL

ALPHA(40) WW_TYP_INTERVENANT
ALPHA(32) WW_TYP_INTAD1
ALPHA(5)  WW_TYP_INTCPO
ALPHA(26) WW_TYP_INTVIL

ALPHA(40) WW_TYP_LESE
ALPHA(32) WW_TYP_LESEAD1
ALPHA(32) WW_TYP_LESEAD2
ALPHA(5)  WW_TYP_LESECPO
ALPHA(26) WW_TYP_LESEVIL 

ALPHA(40)  WW_TYP_COURTIERNOM
ALPHA(32)  WW_TYP_COUAD1
ALPHA(32)  WW_TYP_COUAD2
ALPHA(5)   WW_TYP_COUCPO
ALPHA(26)  WW_TYP_COUVIL

ALPHA(40) WW_TYP_ASSURE
ALPHA(32) WW_TYP_ASSAD1
ALPHA(32) WW_TYP_ASSAD2
ALPHA(5)  WW_TYP_ASSCPO
ALPHA(26) WW_TYP_ASSVIL

* Déclaration des variables

ALPHA(10)  W_CONTEXTE
ALPHA(20)  W_COMPLEMENT
NUM_P(7,0) W_NUMERO
NUM_P(3,0) W_VERSION
ALPHA(10)  W_CONTEXTE_SIGNET

NUM_P(5,0) W_COURTN_ICT
NUM_P(5,0) W_COURTI_ICT
NUM_P(5,0) W_INTNOM_IIN
NUM_P(5,0) W_INTERV_IIN

NUM_P(7,0) W_ASSURE_IAS 
ALPHA(54)  W_LIGNE1
ALPHA(54)  W_LIGNE2
ALPHA(20)  WW_FORMAT_GES_TEL
ALPHA(10)  WW_NUMERO10
ALPHA(2)   WW_NUMERO01
ALPHA(2)   WW_NUMERO02
ALPHA(2)   WW_NUMERO03
ALPHA(2)   WW_NUMERO04
ALPHA(2)   WW_NUMERO05

ALPHA(9)   W_MOIS_LET
ALPHA(60)  WW_TYP_BENEF_NOM
ALPHA(32)  WW_TYP_BENEFAD1
ALPHA(32)  WW_TYP_BENEFAD2
ALPHA(5)   WW_TYP_BENEFCPO
ALPHA(26)  WW_TYP_BENEFVIL
ALPHA(28)  WA_TIMESTAMP

TIMESTAMP WP_TIMESTP

ALPHA(30)  P_CLE 
ALPHA(128) P_DCM
ALPHA(512) P_CHC
ALPHA(512) P_CHI 
ALPHA(512) WP_PROC_CHEMIN
ALPHA(128) P_BAD 

ALPHA(200) WW_NOM_FICHIER
ALPHA(3)     WP_CDE_RETOUR_3  

*paramètres YYY227 : 
ALPHA(3) P_TYPE_ORIGINE
ALPHA(256) P_FICHIER_DOC
ALPHA(3) P_TYPE_DESTINATION
ALPHA(256) P_FICHIER_PDF
ALPHA(256) WW_VISU_FICHIER
ALPHA(1) P_SUPPRESSION_DOC

ALPHA(25) WW_TYP_VOSRFS
ALPHA(25)  WW_TYP_CTE
ALPHA(256) P_CHEMIN
ALPHA(10)  LGID1
 
* Déclaration des vues
*VUE V_COURRI1        *CLE YCOURRI1 COURRI_COU
VUE V_UTILIS         *CLE YUTILIS1 WW_UTILISATEUR
VUE V_SINIST         *CLE YSINIST1 WW_TYP_SUA, WW_TYP_NUM, WW_TYP_SBR
VUE V_YYYPAR1        *CLE YYYYPAR1 W_CONCEPT, W_FAMILLE, W_CODE 
VUE V_INTJNM4        *CLE YINTJNM4 K54_IIN
VUE V_ASSJNM4        *CLE YASSJNM4 K51_IAS
VUE V_COUJNM4        *CLE YCOUJNM4 K52_ICT
VUE V_COMPA5         *CLE YCOMPA5  K53_ICN
VUE V_ENTREP4        *CLE YENTREP4 K59_IDN
VUE V_SINLAD1        *CLE YSINLAD1 K19_SUA, K19_NUM, K19_SBR, K19_TDS, K19_TYL, K19_COL
VUE V_LNCSID1        *CLE YLNCSID1 W_CONTEXTE, W_COMPLEMENT, W_NUMERO, W_VERSION, W_CONTEXTE_SIGNET
VUE V_COURTN         *CLE YCOURTN1 W_COURTN_ICT
VUE V_COURTI         *CLE YCOURTI1 W_COURTI_ICT
VUE V_INTNOM         *CLE YINTNOM1 W_INTNOM_IIN
VUE V_INTERV         *CLE YINTERV1 W_INTERV_IIN
VUE V_COMPA          *CLE YCOMPA5  COMPA_ICN
VUE V_ASSNOM         *CLE YASSNOM1 W_ASSNOM_IAS
VUE V_ASSURE         *CLE YASSURE1 W_ASSURE_IAS
VUE V_SINREG         *CLE YSINREG1 WW_TYP_SUA, WW_TYP_NUM, WW_TYP_SBR
VUE V_SINCOU1         *CLE YSINCOU1 WW_TYP_SUA, WW_TYP_NUM, WW_TYP_SBR, WW_TYP_NUC
*VUE V_SININT1        *CLE YSININT1 WW_TYP_SUA, WW_TYP_NUM, WW_TYP_SBR, WW_TYP_TYI, SININT_IIN

* ajout plusieurs lignes texte observation pour signet
ALPHA(70) W_TEXTE_OBSERVATION
LISTE LSTENREG *REF_MLD(POOBSV)
LISTE LSTDES *REF_MLD(PCODES)

NUM_P(9,0) W_NUM_ENREG
ALPHA(7M) P_CHAINE_A_NETTOYER
NUM_P(7,0) WL_NIVEAU2

ALPHA(20) W_LGID2
LIRE V_SINIST 
SI V_SINIST EXISTE et PS1_OPT <> '4'

   WW_TYP_IPB = SINIST_IPB
   WW_TYP_AFFAIRE = SINIST_REF
   WW_TYP_AD1 = SINIST_AD1
   WW_TYP_CPO = SINIST_DEP//SINIST_CPO
   WW_TYP_VIL = SINIST_VIL
   WW_TYP_IPB = SINIST_IPB
   WW_TYP_AFFAIRE = SINIST_REF
   WW_TYP_DATE_SIN = SINIST_JJJ//'/'//SINIST_JJM//'/'//SINIST_JJA
   WW_TYP_SOMME = SINIST_SPS
   WW_TYP_FRANCHISE = SINIST_MFP
   WW_TYP_VIL_SIN = SINIST_VIL
   WW_TYP_CAUSE = SINIST_CAU
   WW_TYP_EXPERT = SINIST_REX
   *Libellé concerne
   WW_TYP_LIBELLE = SINIST_LCO
   * Vos références = ZSININT_RFS selon le type d'intervenant
   LIRE_SQL SININT *COL(SININT_RFS) *COND(SININT_SUA = :WW_TYP_SUA ET SININT_NUM =:WW_TYP_NUM ET SININT_SBR =:WW_TYP_SBR ET SININT_TYI =:WW_TYP_TYI)
   *ajouter dans proc valeur signet
   WW_TYP_VOSRFS = SININT_RFS
   *pour l'expert : reference sinistre => WW_TYP_VOSRFS = SINIST_REX
   *pour l'avocat : reference sinistre = > WW_TYP_VOSRFS = SINIST_RAV
   *pour le courtier : reference sinistre => WW_TYP_VOSRFS = SINIST_RAP
   *selon le destinataire
   * nouveau courrier: mission d'expertise hors construction
   * Risque Assuré => ligne de désignation
   LIRE_SQL PCODES *COL(PCODES_TXT) *COND(PCODES_IPB =:WW_TYP_IPB et PCODES_ALX = 0 et PCODES_TCH = 0 et PCODES_ORD = 1)
   WW_TYP_DESIGNATION = PCODES_TXT
   
   *debug_tev
   WW_TYP_CTE = *blank
   SINCOU_TEV = *blank
   LIRE_SQL SINCOU *COL(SINCOU_TEV) *COND(SINCOU_SUA = :WW_TYP_SUA ET SINCOU_NUM =:WW_TYP_NUM et SINCOU_SBR =:WW_TYP_SBR et SINCOU_TEV =:WW_TYP_TEV  )
   SI SINCOU_TEV = 'AR'
      WW_TYP_CTE = 'Recommandé avec A.R.'
   SINON 
      WW_TYP_CTE = *blank
      SINCOU_TEV = *blank
   FIN  
   
   *conversion numerique en alpha SUA sur 2
   TRAITER_PROC PROC_SUA2
   ** Procedure RECIDS nom du destinataire
   TRAITER_PROC PROC_RECIDS
   TRAITER_PROC PROC_DESTINATAIRE
   * infos prejudice subi par 
   TRAITER_PROC PROC_PREJUDICE
   *DATE Création
   *WW_TYP_DATECREATION = SINIST_CRJ//'/'//SINIST_CRM//'/'//SINIST_CRA
   TRAITER_PROC PROC_MOIS
   * clé pour assuré NOM infos complémentaires du courrier
   TRAITER_PROC PROC_ASSURE_INFOS
   TRAITER_PROC PROC_EXPERT_INFOS
   TRAITER_PROC PROC_COURTIER_INFOS 
   TRAITER_PROC PROC_AVOCAT_INFOS
   TRAITER_PROC PROC_BENEF_INFOS
   * INFOS GESTIONNAIRE 
   ****************
   TRAITER_PROC PROC_INFOS_GES
   *format telephone 01 02 03 04 05
   TRAITER_PROC PROC_FORMAT_TELEPHONE
   
   * Ouverture du moniteur de commandes pour afficher dossier windows 
   WW_ALP_CMD = *BLANK
   WW_ALP_CMD = 'STRPCO'
   EXECUTER_CMD WW_ALP_CMD

   * LISTE DES SIGNETS
   VIDER_LST P_LSM_SIGNETS
   ** on doit determiner le nom des signets dans la liste P_LSM_SIGNETS 
   ** utilisation du contexte et code lettre en paramètres
   ** W_NOM_SIGNET correspond nom du signet dans le document word.
   W_CONTEXTE = 'LETTYP'
   W_COMPLEMENT = WW_TYP_LET  
   W_NUMERO = 0
   W_VERSION = 1
   W_CONTEXTE_SIGNET = 'SINIS'
   
   **Signets du FLUX LNCSID1
   POSITIONNER_AV V_LNCSID1
      
   LIRE_SUIVANT V_LNCSID1
      
   TANT_QUE V_LNCSID1 EXISTE
      W_NOM_SIGNET = *BLANK
      W_VALEUR_SIGNET = *BLANK
      W_NOM_SIGNET  = LNCSID_SIG
      W_VALEUR_SIGNET = *BLANK
       
      TRAITER_PROC PROC_VALEUR_SIGNET
      
      INSERER_ELT  P_LSM_SIGNETS 
      LIRE_SUIVANT V_LNCSID1
   REFAIRE
   
   
   * VISUALISATION DES COURRIERS en attente
   * si NUC <> 0 => courrier en attente
   SI WW_TYP_NUC <> 0
      * avant la validation des courriers
      P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_NUC
      SI PS1_OPT = '8'
         SI WW_TYP_TLT = 'T';'L';'X'
            P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_NUC
            P_REFERENCE = P_NOM_FICHIER 
            P_TYPE_DOCUMENT = 'PDF'
            *puis ouvrir le document
            TRAITER_PROC PROC_VISU_ATTENTE
         
         FIN
      FIN
      * debug_transformation et lncchd
      SI PS1_OPT = 'T'
         * récupérer le chemin du document
         TRAITER_PROC PROC_CHEMIN

         LIRE V_SINCOU1
         SI V_SINCOU1 EXISTE
            
         
            * supprimer le pdf dans lncchd
            LNCCHD_ID1 = 'SINCOU'
            LNCCHD_ID2 = WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM
            SI WW_TYP_SBR <> *BLANK
               LNCCHD_ID2 = LNCCHD_ID2///'_'///WW_TYP_SBR
            FIN
            LNCCHD_ID3 = WW_TYP_NUC
            LNCCHD_ID4 = 0
            LNCCHD_CHD = P_CHI
            LNCCHD_DOC = P_NOM_FICHIER
            LNCCHD_EXT = 'PDF'
            LNCCHD_FPV = 0
            LNCCHD_CRU = SINCOU_CRU
            LNCCHD_CRA = SINCOU_CRA
            LNCCHD_CRJ = SINCOU_CRM
            LNCCHD_CRM = SINCOU_CRJ
            LNCCHD_CRH = 0
            LNCCHD_MJU = SINCOU_MJU
            LNCCHD_MJA = SINCOU_MJA
            LNCCHD_MJM = SINCOU_MJM
            LNCCHD_MJJ = SINCOU_MJJ
            LNCCHD_MJH = 0
            LNCCHD_FPC = ''
            SUPPRIMER_SQL LNCCHD *COND(LNCCHD_ID3 = :WW_TYP_NUC)
            *créer le docx
            * mettre à jour LNCCHD
            LNCCHD_ID1 = 'SINCOU'
            LNCCHD_ID2 = WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM
            SI WW_TYP_SBR <> *BLANK
               LNCCHD_ID2 = LNCCHD_ID2///'_'///WW_TYP_SBR
            FIN
            LNCCHD_ID3 = WW_TYP_NUC
            LNCCHD_ID4 = 0
            LNCCHD_CHD = P_CHI
            LNCCHD_DOC = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM
            LNCCHD_EXT = 'DOC'
            LNCCHD_FPV = 0
            LNCCHD_CRU = SINCOU_CRU
            LNCCHD_CRA = SINCOU_CRA
            LNCCHD_CRJ = SINCOU_CRM
            LNCCHD_CRM = SINCOU_CRJ
            LNCCHD_CRH = 0
            LNCCHD_MJU = SINCOU_MJU
            LNCCHD_MJA = SINCOU_MJA
            LNCCHD_MJM = SINCOU_MJM
            LNCCHD_MJJ = SINCOU_MJJ
            LNCCHD_MJH = 0
            LNCCHD_FPC = ''
         
            CREER_SQL LNCCHD 
            
         FIN
      FIN
   SINON   
      *Pour les courriers visualisation des courriers édités
      P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_COU
      
      SI PS1_OPT = '8'
         
         SI WW_TYP_TLT = 'T';'L';'X'
         
            *le fichier recupere un numéro de courrier
            P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_COU
            * regénérer le document avec le nouveau numéro de courrier
            P_REFERENCE = P_NOM_FICHIER 
            P_TYPE_DOCUMENT = 'PDF'
            *puis ouvrir le document
            TRAITER_PROC PROC_VISU_EDITE
         FIN  
      FIN
      
   FIN
   
   * la création des courriers libre
   *TRAITER_PROC PROC_COURRIER_LIBRE 

   *POUR LES TYPES 
   SI WW_TYP_TLT = 'L';'X'
      W_NUM_NB_ENREG = 1
      * -- Test_validation
      
   FIN

   * récupérer les libellés des courriers pour ajouter à P_REFERENCE log flux json du webservice
   SI WW_TYP_TLT = 'T';'L';'X'
      
      LIRE_SQL COURRI *COL(COURRI_LBC) *COND(COURRI_COU =:WW_TYP_COU)
      P_REFERENCE = COURRI_LBC
      
   FIN
   

   
   
   *empecher la nouvelle édition avant la validation
   SI PS1_OPT = '8' ou PG_F08 = 'O'
       
   SINON
      *edition
      TRAITER_PROC PROC_EDITION
   FIN
   
   * debug_validation  
   TRAITER_PROC PROC_VALIDATION   
   
   *
SINON
   TRAITER_PROC PROC_SUPPRESSION
   
FIN

TERMINER   

* DEBUT PROCEDURE RECIDS 
WW_TYP_DESTINATAIRE = *BLANK

*--> Si Assuré
SI WW_TYP_TDS = 'AS'
   K51_IAS   = WW_TYP_IDS 
   LIRE V_ASSJNM4
   SI V_ASSJNM4 N_EXISTE_PAS
      WW_TYP_DESTINATAIRE  = 'Assuré inconnu'
   SINON
      WW_TYP_DESTINATAIRE  = ASSNOM_NOM
   FIN
SINON
   *--> Si Courtier
   SI WW_TYP_TDS = 'CT'
      K52_ICT   = WW_TYP_IDS   
      LIRE  V_COUJNM4
      SI V_COUJNM4 N_EXISTE_PAS
         WW_TYP_DESTINATAIRE  = 'Courtier inconnu'
      SINON
         WW_TYP_DESTINATAIRE  = COURTN_NOM
      FIN
   SINON
      *--> Si Compagnie
      SI WW_TYP_TDS = 'CI'
         K53_ICN   = WW_TYP_IDS  
         LIRE  V_COMPA5
         SI V_COMPA5 N_EXISTE_PAS
            WW_TYP_DESTINATAIRE  = 'Compagnie inconnue'
         SINON
            WW_TYP_DESTINATAIRE  = COMPA_NOM
         FIN
      SINON
         *--> Si Intervenant
         SI WW_TYP_TDS = 'IN'
            K54_IIN   = WW_TYP_IDS  
            LIRE  V_INTJNM4
            SI V_INTJNM4 N_EXISTE_PAS
               WW_TYP_DESTINATAIRE  = 'Intervenant inconnu'
            SINON
               WW_TYP_DESTINATAIRE  = INTNOM_NOM
            FIN
         SINON
            *--> Si Entreprise
            SI WW_TYP_TDS = 'CN'
               K59_IDN   = WW_TYP_IDS  
               LIRE  V_ENTREP4
               SI V_ENTREP4 N_EXISTE_PAS
                  WW_TYP_DESTINATAIRE  = 'Entreprise inconnue'
               SINON
                  WW_TYP_DESTINATAIRE  = ENTREP_NMEN
               FIN
            SINON
               *--> Si Lésé sinistre
               SI WW_TYP_TDS = 'LS'
                  K19_SUA = PG_ASI
                  K19_NUM = PG_NSI
                  K19_SBR = PG_SSI
                  K19_TDS = PG_TDS
                  K19_TYL = '  '
                  K19_COL = WW_TYP_IDS  
                  LIRE V_SINLAD1
                  SI V_SINLAD1 N_EXISTE_PAS
                     WW_TYP_DESTINATAIRE  = 'Lésé inconnu'
                  SINON
                     WW_TYP_DESTINATAIRE  = SINLAD_NOM /// '-' // SINLAD_DEP // SINLAD_CPO // ' ' // SINLAD_VIL /// '-' // SINLAD_AD1
                  FIN
               SINON
                  *--> autre ....
                  *   WW_TYP_DESTINATAIRE  = 'Destinataire inconnu'
                  WW_TYP_DESTINATAIRE  = *BLANK
               FIN
            FIN
         FIN
      FIN
   FIN
FIN

* Debut PROC_DESTINATAIRE
CHOIX_SELON WW_TYP_TDS
   SI_VALEUR 'AS'
      * le destinataire est indiqué dans le PGM YSI724
      WW_EC_IDS = W_ASSNOM_IAS
      * clé pour assuré NOM
      W_ASSNOM_IAS = WW_TYP_IDS  
      
      LIRE V_ASSNOM
      SI V_ASSNOM EXISTE
         WW_TYP_INTERLOC = ASSNOM_NOM
      FIN
      *clé pour assuré INFOS
      W_ASSURE_IAS = WW_TYP_IDS  
      LIRE V_ASSURE
      SI V_ASSURE EXISTE
         WW_TYP_INTERLOCAD1 = ASSURE_AD1
         WW_TYP_INTERLOCAD2 = ASSURE_AD2
         WW_TYP_INTERLOCCPO = ASSURE_DEP//ASSURE_CPO
         WW_TYP_INTERLOCVIL = ASSURE_VIL
      FIN
         
   SI_VALEUR 'CT'
      * LIRE VUE COURTN COURTIER NOM
      * clé de lecture COURTN
      W_COURTN_ICT = WW_TYP_IDS
      LIRE V_COURTN
      SI V_COURTN EXISTE
         WW_TYP_INTERLOC = COURTN_NOM
      FIN
   
      * LIRE VUE COURTI COURTIER INFOS
      * clé de lecture de COURTI
      W_COURTI_ICT = WW_TYP_IDS
      LIRE V_COURTI
      SI V_COURTI EXISTE
         WW_TYP_INTERLOCAD1 = COURTI_AD1
         WW_TYP_INTERLOCAD2 = COURTI_AD2
         WW_TYP_INTERLOCCPO = COURTI_DEP//COURTI_CPO
         WW_TYP_INTERLOCVIL = COURTI_VIL
      FIN
      SI WW_TYP_TYI = 'CT'
         *infos vos références
         WW_TYP_VOSRFS = SINIST_RAP
      FIN
   SI_VALEUR 'IN'
      *
      W_INTNOM_IIN = 0
      W_INTERV_IIN = 0
      *
      SI WW_TYP_TYI = 'AV'
         *Clé de lecture de INTNOM
         W_INTNOM_IIN = SINIST_AVO
         *Clé de lecture de INTERV
         W_INTERV_IIN = SINIST_AVO
         *infos vos références
         WW_TYP_VOSRFS = SINIST_RAV
      FIN
      *
      SI WW_TYP_TYI = 'EX'

         W_INTNOM_IIN = WW_TYP_IDS
         W_INTERV_IIN = WW_TYP_IDS
         *infos vos références
         WW_TYP_VOSRFS = SINIST_REX
         
      FIN
      *
      SI WW_TYP_TYI = 'TI';'HU'
         W_INTNOM_IIN = WW_TYP_IDS  
         W_INTERV_IIN = WW_TYP_IDS  
      FIN

      SI W_INTNOM_IIN <> 0
   
         LIRE V_INTNOM 
         SI V_INTNOM EXISTE
            WW_TYP_INTERLOC = INTNOM_NOM
         FIN
            
         LIRE V_INTERV
         SI V_INTERV EXISTE
            WW_TYP_INTERLOCAD1 = INTERV_AD1
            WW_TYP_INTERLOCAD2 = INTERV_AD2 
            WW_TYP_INTERLOCCPO = INTERV_COM
            WW_TYP_INTERLOCVIL = INTERV_VIL
         FIN
      FIN
   SI_VALEUR 'CI'
      *LIRE COMPA INFOS 
      * clé de lecture COMPA
      COMPA_ICN = WW_TYP_IDS
      LIRE V_COMPA
      SI V_COMPA EXISTE
         WW_TYP_INTERLOC    = COMPA_NOM
         WW_TYP_INTERLOCAD1 = COMPA_AD1
         WW_TYP_INTERLOCAD2 = COMPA_AD2
         WW_TYP_INTERLOCCPO = COMPA_DEP//COMPA_CPO
         WW_TYP_INTERLOCVIL = COMPA_VIL
      FIN
      * lecture_V_SINLAD1   
   SI_VALEUR 'LS'
      SINLAD_COL = WW_TYP_IDS  
         
      LIRE V_SINLAD1
      SI V_SINLAD1 N_EXISTE_PAS
         WW_TYP_DESTINATAIRE  = 'Lésé inconnu'
      SINON
         WW_TYP_INTERLOC    = SINLAD_NOM
         WW_TYP_INTERLOCAD1 = SINLAD_AD1
         WW_TYP_INTERLOCAD2 = SINLAD_AD2
         WW_TYP_INTERLOCCPO = SINLAD_DEP // SINLAD_CPO
         WW_TYP_INTERLOCVIL = SINLAD_VIL
      FIN 
FIN_CHOIX_SELON 
*AFFICHAGE_GROUPE_DESTINATAIRE DEST_AD1, DEST_AD2, DEST_AD3
SI WW_TYP_INTERLOCAD2 = *BLANK
   WW_TYP_INTERLOCAD2 = WW_TYP_INTERLOCCPO //' '// WW_TYP_INTERLOCVIL
   WW_TYP_INTERLOCCPO = *BLANK
   WW_TYP_INTERLOCVIL = *BLANK
SINON    
   SI WW_TYP_INTERLOCAD1 = *BLANK
      WW_TYP_INTERLOCAD1 = WW_TYP_INTERLOCAD2
      WW_TYP_INTERLOCAD2 = *BLANK
      WW_TYP_INTERLOCAD2 = WW_TYP_INTERLOCCPO //' '// WW_TYP_INTERLOCVIL
      WW_TYP_INTERLOCCPO = *BLANK
      WW_TYP_INTERLOCVIL = *BLANK
   FIN
FIN

* Debut PROC_VALEUR_SIGNET
W_VALEUR_SIGNET = *BLANK
CHOIX_SELON LNCSID_SIG      
   SI_VALEUR 'ASSURE_AD1'
      W_VALEUR_SIGNET = ASSURE_AD1
   SI_VALEUR 'ASSURE_AD2'
      W_VALEUR_SIGNET = ASSURE_AD2
   SI_VALEUR 'ASSURE_NOM'
      W_VALEUR_SIGNET = ASSNOM_NOM
   SI_VALEUR 'ASSURE_PTT'
      W_VALEUR_SIGNET = ASSURE_DEP//ASSURE_CPO
   SI_VALEUR 'ASSURE_TITRE'
      W_VALEUR_SIGNET = ASSNOM_NOM
   SI_VALEUR 'ASSURE_TITRE_NOM'
      W_VALEUR_SIGNET = ASSNOM_NOM
   SI_VALEUR 'ASSURE_TITRE_NOM_1'
      W_VALEUR_SIGNET = ASSNOM_NOM
   SI_VALEUR 'ASSURE_VILLE'
      W_VALEUR_SIGNET = ASSURE_VIL
   SI_VALEUR 'COURRIER_COMMENTAIRE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'COURRIER_TYPE_ENVOI'
      W_VALEUR_SIGNET = WW_TYP_CTE
   SI_VALEUR 'COURTI_AD1'
      W_VALEUR_SIGNET = COURTI_AD1
   SI_VALEUR 'COURTI_AD2'
      W_VALEUR_SIGNET = COURTI_AD2
   SI_VALEUR 'COURTI_NOM'
      W_VALEUR_SIGNET = COURTN_NOM
   SI_VALEUR 'COURTI_PTT'
      W_VALEUR_SIGNET =  COURTI_DEP//COURTI_CPO
   SI_VALEUR 'COURTI_VILLE'
      W_VALEUR_SIGNET = COURTI_VIL
   SI_VALEUR 'DEST_AD1'
      W_VALEUR_SIGNET = &CADRAGE_GAUCHE(WW_TYP_INTERLOCAD1)
   SI_VALEUR 'DEST_AD2'
      W_VALEUR_SIGNET = &CADRAGE_GAUCHE(WW_TYP_INTERLOCAD2)
   SI_VALEUR 'DEST_AD3'
      W_VALEUR_SIGNET = &CADRAGE_GAUCHE(WW_TYP_INTERLOCCPO)//' '// WW_TYP_INTERLOCVIL
   SI_VALEUR 'DEST_INTERLOC_TITRE'
      W_VALEUR_SIGNET = WW_TYP_INTERLOC
   SI_VALEUR 'DEST_INTERLOC_TITRE_1'
      W_VALEUR_SIGNET = WW_TYP_INTERLOC
   SI_VALEUR 'DEST_LG3'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'DEST_NOM'
      W_VALEUR_SIGNET = WW_TYP_INTERLOC
   SI_VALEUR 'DEST_PAYS'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'DEST_PTT'
      W_VALEUR_SIGNET = WW_TYP_INTERLOCCPO
   SI_VALEUR 'DEST_TITRE_NOM'
      W_VALEUR_SIGNET = WW_TYP_INTERLOC
   SI_VALEUR 'DEST_VILLE'
      W_VALEUR_SIGNET = WW_TYP_INTERLOCVIL
   SI_VALEUR 'FORMULE_POLITESSE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'INFO_ATTENTION_DE'
      W_VALEUR_SIGNET = ASSNOM_NOM
   SI_VALEUR 'INFO_BUREAU_ECRAN'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'INFO_CONCERNE'
      W_VALEUR_SIGNET = ASSNOM_NOM
   SI_VALEUR 'INFO_DATE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'INFO_DATE_LETTRE'
      W_VALEUR_SIGNET = WW_TYP_DATECREATION
   SI_VALEUR 'INFO_PRENOM_NOM'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'INFO_VOS_REF_POLICE'
      W_VALEUR_SIGNET = WW_TYP_IPB
   SI_VALEUR 'INFO_VOS_REF_SINISTRE'
      W_VALEUR_SIGNET = SININT_RFS
   SI_VALEUR 'POL_BRANCHE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_BRANCHE_LIBELLE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_DATE_ACCORD'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_DATE_EFFET'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_DATE_RECEPTION'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_DATE_RESIL'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_DATE_RECEPTION'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_DATE_RESIL'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_DEVISE_CODE_ISO'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_NATURE_TRAVAUX'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_NUM'
      W_VALEUR_SIGNET = WW_TYP_IPB
   SI_VALEUR 'POL_NUM_1'
      W_VALEUR_SIGNET = WW_TYP_IPB
   SI_VALEUR 'POL_OPERATION'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_SOUS_BRANCHE_LIBELLE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_SOUS_BRANCHE_LIBELLE_1'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'POL_TYPE_CO'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_ADRESSE_A_DROITE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_APER_NOM'
      W_VALEUR_SIGNET = SINIST_APR
   SI_VALEUR 'SIN_AVO_AD1'
      W_VALEUR_SIGNET = WW_TYP_AVOAD1
   SI_VALEUR 'SIN_AVO_AD2'
      W_VALEUR_SIGNET = WW_TYP_AVOAD2
   SI_VALEUR 'SIN_AVO_PTT'
      W_VALEUR_SIGNET = WW_TYP_AVOCPO
   SI_VALEUR 'SIN_AVO_TITRE_NOM'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_AVO_VILLE'
      W_VALEUR_SIGNET = WW_TYP_AVOVIL
   SI_VALEUR 'SIN_BENEF'
      W_VALEUR_SIGNET =  WW_TYP_BENEF_NOM
   SI_VALEUR 'SIN_BENEF_AD1'
      W_VALEUR_SIGNET = WW_TYP_BENEFAD1
   SI_VALEUR 'SIN_BENEF_AD2'
      W_VALEUR_SIGNET = WW_TYP_BENEFAD2
   SI_VALEUR 'SIN_BENEF_NOM'
      W_VALEUR_SIGNET =  WW_TYP_BENEF_NOM
   SI_VALEUR 'SIN_BENEF_NOM_LIE_AU_CODE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_BENEF_PTT'
      W_VALEUR_SIGNET = WW_TYP_BENEFCPO
   SI_VALEUR 'SIN_BENEF_TITRE_NOM'
      W_VALEUR_SIGNET = WW_TYP_BENEF_NOM
   SI_VALEUR 'SIN_BENEF_VILLE'
      W_VALEUR_SIGNET = WW_TYP_BENEFVIL
   SI_VALEUR 'SIN_CAUSE'
      W_VALEUR_SIGNET = SINIST_CAU
   SI_VALEUR 'SIN_CHAPITRE_CONCLUSION'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_CHAPITRE_ENTETE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_CHAPITRE_FORMULE_POLITESSE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_CHAPITRE_INTRODUCTION'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_CHAPITRE_POINT_POLICE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_CHAPITRE_PRISE_POSITION'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_CIRCONSTANCES'
      * Ajout de plusieurs lignes pour ce signet
      * charger sql
      CHARGER_SQL_LST LSTENREG POOBSV *COND(POOBSV_TOB=100 et POOBSV_NUM =:WW_TYP_NUM et POOBSV_SUA =:WW_TYP_SUA et POOBSV_SBR =:WW_TYP_SBR) *TRI(POOBSV_LGN)
      LECTURE_LST LSTENREG
         W_TEXTE_OBSERVATION = POOBSV_OBS
         P_CHAINE_A_NETTOYER = *BLANK
         P_CHAINE_A_NETTOYER = W_TEXTE_OBSERVATION
         TRAITER_PROC PROC_TRT_NETTOYER
         SI W_VALEUR_SIGNET = *BLANK
            W_VALEUR_SIGNET = P_CHAINE_A_NETTOYER
         SINON
            W_VALEUR_SIGNET = W_VALEUR_SIGNET /// ' ' // P_CHAINE_A_NETTOYER
         FIN
      FIN_LECTURE_LST
   SI_VALEUR 'SIN_DESIGNATION'
      * Ajout de plusieurs lignes pour ce signet
      * charger sql
      CHARGER_SQL_LST LSTDES PCODES *COND(PCODES_IPB =:WW_TYP_IPB) *TRI(PCODES_ORD)
      LECTURE_LST LSTDES
         W_TEXTE_OBSERVATION = PCODES_TXT
         P_CHAINE_A_NETTOYER = *BLANK
         P_CHAINE_A_NETTOYER = W_TEXTE_OBSERVATION
         TRAITER_PROC PROC_TRT_NETTOYER
         SI W_VALEUR_SIGNET = *BLANK
            W_VALEUR_SIGNET = P_CHAINE_A_NETTOYER
         SINON
            W_VALEUR_SIGNET = W_VALEUR_SIGNET /// ' ' // P_CHAINE_A_NETTOYER
         FIN
      FIN_LECTURE_LST
   SI_VALEUR 'SIN_COURTI_PTT'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_COURTI_TITRE_NOM'
      W_VALEUR_SIGNET = SINIST_RCO
   SI_VALEUR 'SIN_COURTI_VILLE'
      W_VALEUR_SIGNET = COURTI_VIL
   SI_VALEUR 'SIN_DATE_DERN_AVIS_ECH_IMP'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_DATE_DERN_AVIS_ECH_LETTRE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_DATEJ'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_DROC'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_EXP_AD1'
      W_VALEUR_SIGNET = WW_TYP_EXPAD1
   SI_VALEUR 'SIN_EXP_AD2'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_EXP_NOM'
      W_VALEUR_SIGNET = SINIST_REX
   SI_VALEUR 'SIN_EXP_NUMEROTATION_RAPPORT'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_EXP_PTT'
      W_VALEUR_SIGNET = WW_TYP_EXPCPO
   SI_VALEUR 'SIN_EXP_REF_PRECEDENTE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_EXP_TITRE_NOM'
      W_VALEUR_SIGNET = WW_TYP_EXPERT
   SI_VALEUR 'SIN_EXP_VIL'
      W_VALEUR_SIGNET = WW_TYP_EXPVIL
   SI_VALEUR 'SIN_FIN_BF_DATE_LETTRE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_FIN_GL_DATE_LETTRE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_GEST'
      W_VALEUR_SIGNET = SINIST_GES
   SI_VALEUR 'SIN_GEST_BUREAU_VILLE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_GEST_E_MAIL'
      W_VALEUR_SIGNET = MAIL_GESTIONNAIRE
   SI_VALEUR 'SIN_GEST_PRENOM_NOM'
      W_VALEUR_SIGNET = CIV_GESTIONNAIRE///' '//&CADRAGE_GAUCHE(PRN_GESTIONNAIRE)///' '//&CADRAGE_GAUCHE(NOM_GESTIONNAIRE)
   SI_VALEUR 'SIN_GEST_PRENOM_NOM_1'
      W_VALEUR_SIGNET = PRN_GESTIONNAIRE///' '//NOM_GESTIONNAIRE
   SI_VALEUR 'SIN_GEST_TEL'
      W_VALEUR_SIGNET = WW_FORMAT_GES_TEL
   SI_VALEUR 'SIN_GEST_TELECOPIE'
      W_VALEUR_SIGNET = UTILIS_FAX
   SI_VALEUR 'SIN_MNT_FRANCHISE_GL'
      WW_ALP_20   = &NUM_ALPHA(SINIST_MFP)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_MNT_PRIMES_IMP'
      WW_ALP_20   = &NUM_ALPHA(SINREG_MIM)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_MNT_PROV'
      WW_ALP_20   = &NUM_ALPHA(SINIST_MTS)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_MNT_SP'
      WW_ALP_20   = &NUM_ALPHA(SINREG_MSP)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_MNT_SURPRIMES_RPA'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_MNT_SURPRIMES_RPA_ETOILE'
      W_VALEUR_SIGNET = SINREG_MSP
   SI_VALEUR 'SIN_NATURE_DESORDRES'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_NET_A_PAYER'
      WW_ALP_20   = &NUM_ALPHA(SINIST_SPS)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_NET_A_PAYER_BRUT'
      WW_ALP_20   = &NUM_ALPHA(SINREG_NAP)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_NET_A_PAYER_ETOILE'
      WW_ALP_20   = &NUM_ALPHA(SINREG_NAP)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_NET_A_PAYER_ETOILE_1'
      WW_ALP_20   = &NUM_ALPHA(SINREG_NAP)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_NET_A_PAYER_EURO'
      WW_ALP_20   = &NUM_ALPHA(SINREG_NAP)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_NOM_AFFAIRE'
      W_VALEUR_SIGNET = SINIST_REF
   SI_VALEUR 'SIN_NOS_REF'
      W_VALEUR_SIGNET = WW_TYP_SBR///'S'//' '//WWDATE2//'.'//WW_TYP_NUM
   SI_VALEUR 'SIN_OBJ_LIBELLE'
      W_VALEUR_SIGNET = WW_TYP_LIBELLE
   SI_VALEUR 'SIN_PTT'
      W_VALEUR_SIGNET = SINIST_CPO//SINIST_DEP
   SI_VALEUR 'SIN_RECEP_DATE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_RECEP_DATE_LETTRE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_REG_DATE_LETTRE'
      W_VALEUR_SIGNET = SINIST_OUJ // '/' // SINIST_OUM // '/' // SINIST_OUA
   SI_VALEUR 'SIN_REG_DATE_10'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_REG_DEV'
      W_VALEUR_SIGNET = SINREG_DEV
   SI_VALEUR 'SIN_REG_DEV_1'
      W_VALEUR_SIGNET = SINREG_DEV
   SI_VALEUR 'SIN_REG_MNT_FRANCHISE'
      WW_ALP_20   = &NUM_ALPHA(SINIST_MFP)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_REG_MNT_FRANCHISE_EURO'
      WW_ALP_20   = &NUM_ALPHA(SINIST_MFP)
      TRAITER_PROC TRT_SEPAR_MILLIERS WW_ALP_20
      W_VALEUR_SIGNET = WW_ALP_20
   SI_VALEUR 'SIN_REG_NOTE_DATE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_REG_NOTE_REF'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_RLV_FH_DATE_LETTRE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_RLV_FH_DATE_10'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_RLV_FH_DEV'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_RLV_FH_DEV_1'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_RLV_FH_MNT'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_RLV_FH_MNT_ETOILE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_RLV_FH_MNT_ETOILE_1'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_RLV_FH_NOM_BENEF'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_RLV_FH_NUM'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_SURV_DATE'
      W_VALEUR_SIGNET = SINIST_SUJ // '/' // SINIST_SUM // '/' // SINIST_SUA
   SI_VALEUR 'SIN_SURV_DATE_LETTRE'
      W_VALEUR_SIGNET = SINIST_SUJ // '/' // SINIST_SUM // '/' // SINIST_SUA
   SI_VALEUR 'SIN_SUSP_GAR_DATE_LETTRE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_TIERS_REGLE_REF'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_UNT_FRANCHISE_GL_LIBELLE'
      W_VALEUR_SIGNET = *BLANK
   SI_VALEUR 'SIN_VILLE'
      W_VALEUR_SIGNET = SINIST_VIL
   SI_VALEUR 'SOC_AD1'
      W_VALEUR_SIGNET = COMPA_AD1
   SI_VALEUR 'SOC_AD2'
      W_VALEUR_SIGNET = COMPA_AD2
   SI_VALEUR 'SOC_NOM'
      W_VALEUR_SIGNET = COMPA_NOM
   SI_VALEUR 'SOC_PTT'
      W_VALEUR_SIGNET = COMPA_DEP///COMPA_CPO
   SI_VALEUR 'VOS_REF'
      W_VALEUR_SIGNET = SININT_RFS
FIN_CHOIX_SELON

* Debut PROC_FORMAT_TELEPHONE
WW_NUMERO10 = &CADRAGE_GAUCHE(TEL_GESTIONNAIRE)
WW_NUMERO01 = &EXTRACTION(WW_NUMERO10;1;2)
WW_NUMERO02 = &EXTRACTION(WW_NUMERO10;3;2)
WW_NUMERO03 = &EXTRACTION(WW_NUMERO10;5;2)
WW_NUMERO04 = &EXTRACTION(WW_NUMERO10;7;2)
WW_NUMERO05 = &EXTRACTION(WW_NUMERO10;9;2)
WW_FORMAT_GES_TEL = WW_NUMERO01//' '//WW_NUMERO02//' '//WW_NUMERO03//' '//WW_NUMERO04//' '//WW_NUMERO05
* Debut PROC_INFO_GES
WW_UTILISATEUR = SINIST_CRU
LIRE V_UTILIS 
SI V_UTILIS EXISTE
   NOM_GESTIONNAIRE  = UTILIS_NOM   
   PRN_GESTIONNAIRE  = UTILIS_PNM
   TEL_GESTIONNAIRE  = UTILIS_TEL
   MAIL_GESTIONNAIRE = UTILIS_AEM
   
   * --- Recherche de la civilté du gestionnaire 
   W_CONCEPT = 'GENER'
   W_FAMILLE = 'TITRE'
   W_CODE =    *BLANK
   W_CODE =    UTILIS_TIT
   LIRE V_YYYPAR1
   SI V_YYYPAR1 EXISTE
      CIV_GESTIONNAIRE = YYYPAR_PLIB
   SINON
      CIV_GESTIONNAIRE = *BLANK 
   FIN  
FIN
* Debut PROC_SUA2
WW_TYP_SUA_ALPHA = &NUM_ALPHA(WW_TYP_SUA)
WWDEBUT = 3
WWLONGUEUR = 2
* sélection de la date sur 2
WWDATE2 = &EXTRACTION(WW_TYP_SUA_ALPHA;WWDEBUT;WWLONGUEUR)
* Debut PROC_CHEMIN_FICHIER
* --- Déplacement du fichier vers le serveur 'U:' dans le répertoire '\\STOCKAGE\APP$\LAUNCHER_AS400\'

SI WW_TYP_TLT = 'L'
   
FIN

* WW_NOM_FICHIER_PDF valorisé dans la procédure GENERATION-PDF  
WP_NOM_FICHIER_IFS = *BLANK
WP_NOM_FICHIER_IFS = '/gedpdf/' /// WW_NOM_FICHIER
     
WP_NOM_FICHIER_WINDOWS = *BLANK

*Chemin du fichier destination
TRAITER_PROC PROC_CHEMIN
WP_PROC_CHEMIN = P_CHC

WP_NOM_FICHIER_WINDOWS = WP_PROC_CHEMIN /// WW_NOM_FICHIER

WP_CDE_RETOUR_3 = *BLANK

* --- Appel du programme de déplacement du fichier .pdf depuis l'IFS vers un répertoire windows
APPELER YYY208 WP_NOM_FICHIER_IFS WP_NOM_FICHIER_WINDOWS WP_CDE_RETOUR_3
* Debut PROC_CHEMIN
* utiliser la macro construire chemin &LNC_CONSTRUIRE_CHEMIN 
* les memes paramètres d'entrée que dans YSI711
* P_CLE Clé niveau final en entrée                  
* P_DCM Code document (*BASE si ds LNCCHE) entrée
* P_CHC Chemin résolu complet en sortie
* P_CHI Chemin résolu incomplet en sortie
*-------------------------------------------------------------------
* Appel pgm 400
*-------------------------------------------------------------------
P_CLE = '*SINCOU'
P_DCM = *BLANK
P_CHC = *BLANK
P_CHI = *BLANK

APPELER YLN901 P_CLE P_DCM P_CHC P_CHI

********************************************************** Fin macro
* Debut PROC_OPEN_FOLDER
* Type de fichiers selon le type de courrier libre =  L, Courrier Transformé = X 
SI WW_TYP_TLT = 'L';'X';'T'
   WW_TYP_FILE =  WW_NOM_FICHIER
FIN
TRAITER_PROC PROC_CHEMIN
WP_PROC_CHEMIN = P_CHC
* --- Visualisation du document va ouvrir le dossier windows         
* Le démon permettant l'exécution de la commande STRPCCMD a été démarré en début de programme par la commande 
WW_ALP_CMD = *BLANK
WW_ALP_CMD = 'STRPCCMD PCCMD(''explorer "' /// WP_PROC_CHEMIN /// WW_TYP_FILE/// '"'') PAUSE(*NO)'
EXECUTER_CMD WW_ALP_CMD      
* W_BOO_OPTION = 1   
* Debut PROC_EXPERT_INFOS
LIRE_SQL INTNOM *COL(INTNOM_NOM) *COND(INTNOM_IIN = :SINIST_EXP ET INTNOM_INL = 0 ET INTNOM_TYI = 'EX')
WW_TYP_EXPERT = INTNOM_NOM
LIRE_SQL INTERV *COL(INTERV_AD1, INTERV_AD2, INTERV_COM, INTERV_VIL ) *COND(INTERV_TYI = 'EX' ET INTERV_IIN = :SINIST_EXP)
WW_TYP_EXPAD1 = INTERV_AD1
WW_TYP_EXPAD2 = INTERV_AD2
WW_TYP_EXPCPO = INTERV_COM
WW_TYP_EXPVIL = INTERV_VIL
* Debut PROC_ASSURE_INFOS
*infos assure
* clé pour assuré NOM
W_ASSNOM_IAS = WW_TYP_IDS  
LIRE V_ASSNOM
SI V_ASSNOM EXISTE
   WW_TYP_ASSURE = ASSNOM_NOM
FIN
*clé pour assuré INFOS
W_ASSURE_IAS = WW_TYP_IDS  
LIRE V_ASSURE
SI V_ASSURE EXISTE
   WW_TYP_ASSAD1 = ASSURE_AD1
   WW_TYP_ASSAD2 = ASSURE_AD2
   WW_TYP_ASSCPO = ASSURE_DEP//ASSURE_CPO
   WW_TYP_ASSVIL = ASSURE_VIL
FIN
*AFFICHAGE_GROUPE_ASSURE ASSURE_AD1, ASSURE_AD2, ASSURE_AD3
SI WW_TYP_ASSAD2 = *BLANK
   WW_TYP_ASSAD2 = ASSURE_DEP//ASSURE_CPO //' '// ASSURE_VIL
   WW_TYP_ASSCPO = *BLANK
   WW_TYP_ASSVIL = *BLANK
   
SINON    
   SI WW_TYP_ASSAD1 = *BLANK
      WW_TYP_ASSAD1 = WW_TYP_ASSAD2
      WW_TYP_ASSAD2 = *BLANK
      WW_TYP_ASSAD2 = ASSURE_DEP//ASSURE_CPO //' '// ASSURE_VIL
      WW_TYP_ASSCPO = *BLANK
      WW_TYP_ASSVIL = *BLANK
   FIN
FIN
* Debut PROC_COURTIER_INFOS
WW_TYP_COURTIERID = SINIST_ICT
LIRE_SQL COURTN *COL(COURTN_NOM) *COND(COURTN_ICT = :SINIST_ICT ET COURTN_XN5=0 ET COURTN_INL=0 )
WW_TYP_COURTIERNOM = COURTN_NOM
LIRE_SQL COURTI *COL(COURTI_AD1, COURTI_AD2, COURTI_CPO, COURTI_DEP, COURTI_VIL) *COND(COURTI_ICT = :SINIST_ICT )
WW_TYP_COUAD1 = COURTI_AD1
WW_TYP_COUAD2 = COURTI_AD2
WW_TYP_COUCPO = COURTI_DEP//COURTI_CPO
WW_TYP_COUVIL = COURTI_VIL

* Debut PROC_PREJUDICE
SINLAD_SUA = WW_TYP_SUA    
LIRE V_SINLAD1
SI V_SINLAD1 N_EXISTE_PAS
   WW_TYP_LESE  = 'Lésé inconnu'
SINON
   WW_TYP_LESE = SINLAD_NOM
   WW_TYP_LESEAD1 = SINLAD_AD1
   WW_TYP_LESECPO = SINLAD_DEP // SINLAD_CPO
   WW_TYP_LESEVIL = SINLAD_VIL
FIN 

* Debut PROC_MOIS
*WW_TYP_DATECREATION = SINIST_CRJ//'/'//SINIST_CRM//'/'//SINIST_CRA
SI SINIST_CRM = 01
   W_MOIS_LET = 'Janvier'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 02
   W_MOIS_LET = 'Février'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 03
   W_MOIS_LET = 'Mars'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 04
   W_MOIS_LET = 'Avril'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 05
   W_MOIS_LET = 'Mai'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 06
   W_MOIS_LET = 'Juin'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 07
   W_MOIS_LET = 'Juillet'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 08
   W_MOIS_LET = 'Août'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 09
   W_MOIS_LET = 'Septembre'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 10
   W_MOIS_LET = 'Octobre'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 11
   W_MOIS_LET = 'Novembre'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
SI SINIST_CRM = 12
   W_MOIS_LET = 'Décembre'
   WW_TYP_DATECREATION = SINIST_CRJ//' '//W_MOIS_LET///' '//SINIST_CRA
FIN
   
* Debut PROC_AVOCAT_INFOS
LIRE_SQL INTNOM *COL(INTNOM_NOM) *COND(INTNOM_IIN = :SINIST_AVO ET INTNOM_INL = 0 ET INTNOM_TYI = 'AV')
WW_TYP_AVOCAT = INTNOM_NOM
LIRE_SQL INTERV *COL(INTERV_AD1, INTERV_AD2, INTERV_COM, INTERV_VIL ) *COND(INTERV_TYI = 'AV' ET INTERV_IIN = :SINIST_AVO)
WW_TYP_AVOAD1 = INTERV_AD1
WW_TYP_AVOAD2 = INTERV_AD2
WW_TYP_AVOCPO = INTERV_COM
WW_TYP_AVOVIL = INTERV_VIL

* Debut PROC_BENEF_INFOS
* retrouver le n°code beneficiaire 
*WW_TYP_CHR = 1068354
POSITIONNER_AV V_SINREG
LIRE_SUIVANT V_SINREG
WW_TYP_CHR = SINREG_CHR
WW_TYP_BNC = SINREG_BNC
WW_TYP_BND = SINREG_BND
WW_TYP_BNT = SINREG_BNT
   
* nom du beneficiaire
* LIRE V_SINREG
SI V_SINREG EXISTE
   WW_TYP_BENEF_NOM = SINREG_BEB
FIN

* Benef adresse
* selon type de bénéficiaires destinataire
CHOIX_SELON WW_TYP_BND
   SI_VALEUR 'AS'
      * clé pour assuré NOM
      W_ASSNOM_IAS = WW_TYP_BNC  
      LIRE V_SINREG
      SI V_SINREG EXISTE
         WW_TYP_BENEF_NOM = SINREG_BEB
      FIN
      *clé pour assuré INFOS
      W_ASSURE_IAS = WW_TYP_BNC  
      LIRE V_ASSURE
      SI V_ASSURE EXISTE
         WW_TYP_BENEFAD1 = ASSURE_AD1
         WW_TYP_BENEFAD2 = ASSURE_AD2
         WW_TYP_BENEFCPO = ASSURE_DEP//ASSURE_CPO
         WW_TYP_BENEFVIL = ASSURE_VIL
      FIN
         
   SI_VALEUR 'CT'
      * LIRE VUE COURTN COURTIER NOM
      * clé de lecture COURTN
      W_COURTN_ICT = WW_TYP_BNC
      LIRE V_SINREG
      SI V_SINREG EXISTE
         WW_TYP_BENEF_NOM = SINREG_BEB
      FIN
   
      * LIRE VUE COURTI COURTIER INFOS
      * clé de lecture de COURTI
      W_COURTI_ICT = WW_TYP_BNC
      LIRE V_COURTI
      SI V_COURTI EXISTE
         WW_TYP_BENEFAD1 = COURTI_AD1
         WW_TYP_BENEFAD2 = COURTI_AD2
         WW_TYP_BENEFCPO = COURTI_DEP//COURTI_CPO
         WW_TYP_BENEFVIL = COURTI_VIL
      FIN
   SI_VALEUR 'IN'
      *
      W_INTNOM_IIN = 0
      W_INTERV_IIN = 0
      *
      SI WW_TYP_TYI = 'AV'
         *Clé de lecture de INTNOM
         W_INTNOM_IIN = SINIST_AVO
         *Clé de lecture de INTERV
         W_INTERV_IIN = SINIST_AVO
      FIN
      *
      SI WW_TYP_TYI = 'EX'

         W_INTNOM_IIN = WW_TYP_BNC
         W_INTERV_IIN = WW_TYP_BNC
      FIN
      *
      SI WW_TYP_TYI = 'TI';'HU'
         W_INTNOM_IIN = WW_TYP_BNC  
         W_INTERV_IIN = WW_TYP_BNC  
      FIN

      SI W_INTNOM_IIN <> 0
   
         LIRE V_SINREG 
         SI V_SINREG EXISTE
            WW_TYP_BENEF_NOM = SINREG_BEB
         FIN
            
         LIRE V_INTERV
         SI V_INTERV EXISTE
            WW_TYP_BENEFAD1 = INTERV_AD1
            WW_TYP_BENEFAD2 = INTERV_AD2 
            WW_TYP_BENEFCPO = INTERV_COM
            WW_TYP_BENEFVIL = INTERV_VIL
         FIN
      FIN
   SI_VALEUR 'CI'
      *LIRE COMPA INFOS 
      * clé de lecture COMPA
      COMPA_ICN = WW_TYP_BNC
      LIRE V_COMPA
      SI V_COMPA EXISTE
         WW_TYP_BENEF_NOM= COMPA_NOM
         WW_TYP_BENEFAD1 = COMPA_AD1
         WW_TYP_BENEFAD2 = COMPA_AD2
         WW_TYP_BENEFCPO = COMPA_DEP//COMPA_CPO
         WW_TYP_BENEFVIL = COMPA_VIL
      FIN
      * lecture_V_SINLAD1   
   SI_VALEUR 'LS'
      SINLAD_COL = WW_TYP_BNC  
         
      LIRE V_SINLAD1
      SI V_SINLAD1 N_EXISTE_PAS
         WW_TYP_DESTINATAIRE  = 'Lésé inconnu'
      SINON
         WW_TYP_BENEF_NOM = SINLAD_NOM
         WW_TYP_BENEFAD1 = SINLAD_AD1
         WW_TYP_BENEFAD2 = SINLAD_AD2
         WW_TYP_BENEFCPO = SINLAD_DEP // SINLAD_CPO
         WW_TYP_BENEFVIL = SINLAD_VIL
      FIN 
FIN_CHOIX_SELON

 
* DEBUT PROCEDURE PROC_COURRIER_LIBRE 
* La procédure PROC_COURRIER_LIBRE va utiliser le document word du clausier COURRIERLIBRE.docx comme document vide
*
* cf. STRDFU KDOCK400 pour connaitre les clés qui forment le fichier word à partir du code lettre : COUVID
* Clause Nom1 : AS400
* Clause Nom2 : COUVD
* Clause Nom3 :     1
* Programme de création d'un courrier dynamique via appel service web Poster. Le document est généré dans l'IFS de l'AS400 (répertoire /gedpdf)
* les paramètres du flux json du pgm YYY214
*P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_NUC
* fichier unique pour récuperer les infos du courrier
*P_NOM_FICHIER = P_NOM_FICHIER

*WW_TYP_LET   = 'COUVID'
P_REFERENCE = P_NOM_FICHIER
P_CODE_RETOUR = '0'
* EDITION PDF ou WORD
*-- en cas de validation
SI PG_F08 = 'O'
   *-- pas d'édition
   P_CODE_RETOUR = '0'
   
SINON
   P_CODE_RETOUR = '0'
   TRAITER_PROC PROC_EDITION  
   
   * pour récupérer le fichier unique avec timestamp
   TRAITER_PROC PROC_VALIDATION
   
FIN
* Déclaration des paramètres de la procédure
ALPHA(20) P_ALP_MONTANT
PARAM P_ALP_MONTANT
* Déclaration des valriables de la procédure
NUM_E(2,0) W_NUM_POSITION
NUM_E(2,0) W_NUM_POS_VIRGULE
NUM_E(2,0) W_NUM_TAILLE
ALPHA(1) W_TAB_MONTANT(20)
ALPHA(15) W_ALP_MONTANT_TMP
ALPHA(1) W_ALP_CARACTERE
NUM_E(1,0) W_NUM_INDICATEUR
ALPHA(1) W_ALP_SEPAR_MILLIER

W_ALP_SEPAR_MILLIER = *BLANK
W_ALP_SEPAR_MILLIER = '.'
* Test si un montant a été passé en paramètre
SI P_ALP_MONTANT = *BLANK
   P_ALP_MONTANT = '0'
   QUITTER
FIN
W_ALP_MONTANT_TMP = *BLANK
W_ALP_MONTANT_TMP = &CADRAGE_GAUCHE(P_ALP_MONTANT)
W_NUM_TAILLE = &LONGUEUR_CHAINE(W_ALP_MONTANT_TMP)
W_TAB_MONTANT = *BLANK
PLACER_TABLE W_ALP_MONTANT_TMP W_TAB_MONTANT
W_NUM_POS_VIRGULE = 1
W_ALP_CARACTERE = ','
RECHERCHE = W_ALP_CARACTERE W_TAB_MONTANT(W_NUM_POS_VIRGULE)
W_ALP_MONTANT_TMP = *BLANK
SI *TROUVE = '0'
   W_NUM_POS_VIRGULE = W_NUM_TAILLE + 1
FIN
W_NUM_POSITION = W_NUM_TAILLE
TANT_QUE W_NUM_POSITION > W_NUM_POS_VIRGULE
   W_ALP_CARACTERE = W_TAB_MONTANT(W_NUM_POSITION)
   W_ALP_MONTANT_TMP = W_ALP_CARACTERE /// W_ALP_MONTANT_TMP
   W_NUM_POSITION = W_NUM_POSITION - 1
REFAIRE
SI W_NUM_POS_VIRGULE <> W_NUM_TAILLE + 1
   W_ALP_MONTANT_TMP = ',' /// W_ALP_MONTANT_TMP
   W_NUM_POSITION = W_NUM_POSITION - 1
FIN
W_NUM_INDICATEUR = 1
TANT_QUE W_NUM_POSITION > 0
   W_ALP_CARACTERE = W_TAB_MONTANT(W_NUM_POSITION)
   SI W_NUM_INDICATEUR = 4
      W_ALP_MONTANT_TMP = W_ALP_SEPAR_MILLIER /// W_ALP_MONTANT_TMP
      W_NUM_INDICATEUR = 1
   FIN
   SI W_ALP_CARACTERE <> W_ALP_SEPAR_MILLIER
      W_ALP_MONTANT_TMP = W_ALP_CARACTERE /// W_ALP_MONTANT_TMP
   FIN
   W_NUM_INDICATEUR = W_NUM_INDICATEUR + 1
   W_NUM_POSITION = W_NUM_POSITION - 1
REFAIRE
P_ALP_MONTANT = *BLANK
P_ALP_MONTANT = W_ALP_MONTANT_TMP

* Debut PROC_VISU_ATTENTE
P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_NUC
SI WW_TYP_TLT = 'L'
   WW_NOM_FICHIER = P_NOM_FICHIER /// '.docx'
SINON
   WW_NOM_FICHIER = P_NOM_FICHIER /// '.pdf'
FIN

TRAITER_PROC PROC_CHEMIN
TRAITER_PROC PROC_CHEMIN_FICHIER

* --- Visualisation du document va ouvrir le dossier windows         
* -- convertir le doc qui a été modifié en pdf
P_TYPE_ORIGINE = 'WIN'
P_FICHIER_DOC = WP_PROC_CHEMIN /// P_NOM_FICHIER /// '.docx'
   
P_TYPE_DESTINATION = 'WIN'
P_FICHIER_PDF = WP_PROC_CHEMIN /// P_NOM_FICHIER /// '.pdf'
P_SUPPRESSION_DOC = 'N'  
   
SI WW_TYP_TLT = 'T';'X' 
   WW_VISU_FICHIER = P_FICHIER_PDF
SINON 
   WW_VISU_FICHIER = P_FICHIER_DOC
FIN

* Visualisation du document.
* Le démon permettant l'exécution de la commande STRPCCMD a été démarré en début de programme par la commande 
WW_ALP_CMD = *BLANK
WW_ALP_CMD = 'STRPCCMD PCCMD(''explorer "' /// WW_VISU_FICHIER /// '"'') PAUSE(*NO)'
EXECUTER_CMD WW_ALP_CMD   

* Debut PROC_VISU_EDITE
*retrouver chemin fichier
* le numéro de courrier DACOU
P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_COU

   
SI WW_TYP_TLT = 'T'
   WW_NOM_FICHIER = P_NOM_FICHIER /// '.pdf'
   P_TYPE_DOCUMENT = 'PDF'
SINON
   *P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_NUC
   WW_NOM_FICHIER = P_NOM_FICHIER /// '.pdf'   
   P_TYPE_DOCUMENT = 'PDF'
FIN



* Appel pgm création dynamique service web poster, création du document dans gedpdf
*APPELER YYY214 WW_TYP_LET P_REFERENCE P_NOM_FICHIER P_TYPE_DOCUMENT P_LSM_SIGNETS P_CODE_RETOUR    

TRAITER_PROC PROC_CHEMIN
TRAITER_PROC PROC_CHEMIN_FICHIER

*SI P_CODE_RETOUR = 'OK'                      

* --- Visualisation du document va ouvrir le dossier windows         
* -- convertir le doc qui a été modifié en pdf
P_TYPE_ORIGINE = 'WIN'
P_FICHIER_DOC = WP_PROC_CHEMIN /// P_NOM_FICHIER /// '.docx'
   
P_TYPE_DESTINATION = 'WIN'
P_FICHIER_PDF = WP_PROC_CHEMIN /// P_NOM_FICHIER /// '.pdf'
P_SUPPRESSION_DOC = 'N'  
   
SI WW_TYP_TLT = 'T' 
   WW_VISU_FICHIER = P_FICHIER_PDF
SINON 
   WW_VISU_FICHIER = P_FICHIER_PDF
FIN
   
* pour visualiser le document transformé en pdf

      
* Visualisation du document.
* Le démon permettant l'exécution de la commande STRPCCMD a été démarré en début de programme par la commande 
WW_ALP_CMD = *BLANK
WW_ALP_CMD = 'STRPCCMD PCCMD(''explorer "' /// WW_VISU_FICHIER /// '"'') PAUSE(*NO)'
EXECUTER_CMD WW_ALP_CMD   
*FIN



* Debut PROC_VALIDATION
*traiter validation SINCOU => COURRI
*-- en cas de validation on inscrit dans LNCCHD le courrier

SI PG_F08 = 'O' et WW_TYP_TLT ='T' et P_NOM_FICHIER <> *BLANK

   *retrouver chemin fichier

   *P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_NUC  
   
   P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_COU

   * Selon le type de document : on change le type du word en pdf
   SI WW_TYP_TLT = 'T'
      P_TYPE_DOCUMENT = 'PDF'
   SINON
      P_TYPE_DOCUMENT = 'PDF'
   FIN

   
   *localisation du fichier dans \\Stockage\app$\launcher_as400\TEST\Sincou
   
   TRAITER_PROC PROC_CHEMIN
  
   * pour les courriers libres et transformés pas d'édition
   * pour la visualisation
   
   SI WW_TYP_TLT = 'T'
      WW_NOM_FICHIER = P_NOM_FICHIER /// '.pdf'
   SINON
      *fichier unique pour récupérer les modifs du fichier libre
      *P_NOM_FICHIER = P_NOM_FICHIER /// WA_TIMESTAMP
      WW_NOM_FICHIER = P_NOM_FICHIER /// '.pdf'             
   FIN
         
   
   *ref
   P_REFERENCE = P_NOM_FICHIER 
   
   * Appel pgm création dynamique service web poster, création du document dans gedpdf
   APPELER YYY214 WW_TYP_LET P_REFERENCE P_NOM_FICHIER P_TYPE_DOCUMENT P_LSM_SIGNETS P_CODE_RETOUR
   
   * --- Déplacement du fichier de /gedpdf créé vers le serveur 'U:' dans le répertoire '\\STOCKAGE\...'
   TRAITER_PROC PROC_CHEMIN_FICHIER
   
   
   * Visualisation du document.
   * Le démon permettant l'exécution de la commande STRPCCMD a été démarré en début de programme par la commande 
   WW_ALP_CMD = *BLANK
   WW_ALP_CMD = 'STRPCCMD PCCMD(''explorer "' /// WP_PROC_CHEMIN /// WW_NOM_FICHIER/// '"'') PAUSE(*NO)'
   EXECUTER_CMD WW_ALP_CMD   
   *FIN

   * dans LNCCHD
   * insert into zalbinkdev.ylncchd values ('SINCOU', '2019_00001', 28, 0, 'APP$\LAUNCHER_AS400\TEST\SINCOU\', 'BASERS_2019_00001', 'docx', 0,'CMILFORT', 2022, 4, 27, 165326, CMILFORT, 2022, 4, 27, 172424, '')
   LIRE V_SINCOU1
   SI V_SINCOU1 EXISTE
      * supprimer le pdf dans lncchd
      LNCCHD_ID1 = 'SINCOU'
      LNCCHD_ID2 = WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM
      SI WW_TYP_SBR <> *BLANK
         LNCCHD_ID2 = LNCCHD_ID2///'_'///WW_TYP_SBR
      FIN
      LNCCHD_ID3 = WW_TYP_NUC
      LNCCHD_ID4 = 0
      LNCCHD_CHD = P_CHI
      LNCCHD_DOC = P_NOM_FICHIER///'_'///WW_TYP_NUC
      LNCCHD_EXT = 'PDF'
      LNCCHD_FPV = 0
      LNCCHD_CRU = SINCOU_CRU
      LNCCHD_CRA = SINCOU_CRA
      LNCCHD_CRJ = SINCOU_CRM
      LNCCHD_CRM = SINCOU_CRJ
      LNCCHD_CRH = 0
      LNCCHD_MJU = SINCOU_MJU
      LNCCHD_MJA = SINCOU_MJA
      LNCCHD_MJM = SINCOU_MJM
      LNCCHD_MJJ = SINCOU_MJJ
      LNCCHD_MJH = 0
      LNCCHD_FPC = ''
      SUPPRIMER_SQL LNCCHD *COND(LNCCHD_ID3 = :WW_TYP_NUC)
      * inscrire la création du courrier dans YLNCCHD

      LNCCHD_ID1 = 'COURRI'
      LNCCHD_ID2 = WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM
      SI WW_TYP_SBR <> *BLANK
         LNCCHD_ID2 = LNCCHD_ID2///'_'///WW_TYP_SBR
      FIN
      LNCCHD_ID3 = WW_TYP_COU
      LNCCHD_ID4 = 0
      LNCCHD_CHD = P_CHI
      LNCCHD_DOC = P_NOM_FICHIER
      LNCCHD_EXT = 'PDF'
      LNCCHD_FPV = 0
      LNCCHD_CRU = SINCOU_CRU
      LNCCHD_CRA = SINCOU_CRA
      LNCCHD_CRJ = SINCOU_CRM
      LNCCHD_CRM = SINCOU_CRJ
      LNCCHD_CRH = 0
      LNCCHD_MJU = SINCOU_MJU
      LNCCHD_MJA = SINCOU_MJA
      LNCCHD_MJM = SINCOU_MJM
      LNCCHD_MJJ = SINCOU_MJJ
      LNCCHD_MJH = 0
      LNCCHD_FPC = ''
         
      CREER_SQL LNCCHD  
   FIN

   
FIN

* validation de courriers libre ou transformés
SI PG_F08 = 'O' et WW_TYP_TLT = 'L';'X'
   *table des courriers validés = COURRI
   P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_COU  
   * Selon le type de document : on change le type du word en pdf
   SI WW_TYP_TLT = 'T'
      P_TYPE_DOCUMENT = 'PDF'
   SINON
      P_TYPE_DOCUMENT = 'PDF'
   FIN
   
   * récupérer le doc word
   TRAITER_PROC PROC_CHEMIN_FICHIER
   TRAITER_PROC PROC_CHEMIN
   * remplacer le NUC par le COU


   *récupérer le nom du fichier unique créé à l'édition dans PROC_EDITION = P_NOM_FICHIER du pgm YYY214
   
   
   SI WW_TYP_TLT = 'T'
      WW_NOM_FICHIER = P_NOM_FICHIER /// '.pdf'
   SINON
      *fichier unique pour récupérer les modifs du fichier libre
      * remplace le numéro NUC par COU : passage de SINCOU a COURRI
 
      P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_COU
      WW_NOM_FICHIER = P_NOM_FICHIER /// '.pdf'             
   FIN
    
   *SI P_CODE_RETOUR = 'OK'                      
   * -- convertir le doc qui a été modifié en pdf

   P_TYPE_ORIGINE = 'WIN'
   P_FICHIER_DOC = WP_PROC_CHEMIN /// WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_NUC /// '.docx'
   P_TYPE_DESTINATION = 'WIN'
   P_FICHIER_PDF = WP_PROC_CHEMIN /// P_NOM_FICHIER /// '.pdf'
   P_SUPPRESSION_DOC = 'N'
   * Convertir fichier doc en PDF   
   APPELER YYY227 P_TYPE_ORIGINE P_FICHIER_DOC P_TYPE_DESTINATION P_FICHIER_PDF P_SUPPRESSION_DOC P_CODE_RETOUR
   *-- Ouverture du dossier contenant le fichier
   * --- Visualisation du document va ouvrir le dossier windows         
  
   * Visualisation du document.
   * Le démon permettant l'exécution de la commande STRPCCMD a été démarré en début de programme par la commande 
   WW_ALP_CMD = *BLANK
   WW_ALP_CMD = 'STRPCCMD PCCMD(''explorer "' /// P_FICHIER_PDF/// '"'') PAUSE(*NO)'
   EXECUTER_CMD WW_ALP_CMD   
   
  
   * dans LNCCHD
   * insert into zalbinkdev.ylncchd values ('SINCOU', '2019_00001', 28, 0, 'APP$\LAUNCHER_AS400\TEST\SINCOU\', 'BASERS_2019_00001', 'docx', 0,'CMILFORT', 2022, 4, 27, 165326, CMILFORT, 2022, 4, 27, 172424, '')
   LIRE V_SINCOU1
   SI V_SINCOU1 EXISTE
      * supprimer le pdf dans lncchd
      LNCCHD_ID1 = 'SINCOU'
      
      LNCCHD_ID2 = WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM
      SI WW_TYP_SBR <> *BLANK
         LNCCHD_ID2 = LNCCHD_ID2///'_'///WW_TYP_SBR
      FIN
      LNCCHD_ID3 = WW_TYP_NUC
      LNCCHD_ID4 = 0
      LNCCHD_CHD = P_CHI
      LNCCHD_DOC = P_NOM_FICHIER
      LNCCHD_EXT = 'PDF'
      LNCCHD_FPV = 0
      LNCCHD_CRU = SINCOU_CRU
      LNCCHD_CRA = SINCOU_CRA
      LNCCHD_CRJ = SINCOU_CRM
      LNCCHD_CRM = SINCOU_CRJ
      LNCCHD_CRH = 0
      LNCCHD_MJU = SINCOU_MJU
      LNCCHD_MJA = SINCOU_MJA
      LNCCHD_MJM = SINCOU_MJM
      LNCCHD_MJJ = SINCOU_MJJ
      LNCCHD_MJH = 0
      LNCCHD_FPC = ''
      SUPPRIMER_SQL LNCCHD *COND(LNCCHD_ID3 = :WW_TYP_NUC)
      * inscrire la création du courrier dans YLNCCHD

      LNCCHD_ID1 = 'COURRI'
      LNCCHD_ID2 = WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM
      SI WW_TYP_SBR <> *BLANK
         LNCCHD_ID2 = LNCCHD_ID2///'_'///WW_TYP_SBR
      FIN
      LNCCHD_ID3 = WW_TYP_COU
      LNCCHD_ID4 = 0
      LNCCHD_CHD = P_CHI
      LNCCHD_DOC = P_NOM_FICHIER
      LNCCHD_EXT = 'PDF'
      LNCCHD_FPV = 0
      LNCCHD_CRU = SINCOU_CRU
      LNCCHD_CRA = SINCOU_CRA
      LNCCHD_CRJ = SINCOU_CRM
      LNCCHD_CRM = SINCOU_CRJ
      LNCCHD_CRH = 0
      LNCCHD_MJU = SINCOU_MJU
      LNCCHD_MJA = SINCOU_MJA
      LNCCHD_MJM = SINCOU_MJM
      LNCCHD_MJJ = SINCOU_MJJ
      LNCCHD_MJH = 0
      LNCCHD_FPC = ''
         
      CREER_SQL LNCCHD  
   FIN
   
   *FIN   
FIN
* ALPHA(30000) W_ALP_CHAINE_TMP
ALPHA(7M) W_ALP_CHAINE_TMP
* Debut PROC_TRT_NETTOYER
RECH_REMPLACER P_CHAINE_A_NETTOYER '"' '`' W_ALP_CHAINE_TMP
P_CHAINE_A_NETTOYER = W_ALP_CHAINE_TMP
APPELER YYY206 P_CHAINE_A_NETTOYER


* Debut PROC_SUPPRESSION
* supprime le courrier du repertoire windows
* pour courriers en attente
SI PS1_OPT = '4' et WW_TYP_NUC <> 0
   TRAITER_PROC PROC_SUA2
   
   SI WW_TYP_SBR <> *BLANK
      P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_SBR///'_'///WW_TYP_NUC
   SINON
      P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_NUC
   FIN
   SI WW_TYP_TLT = 'L';'X'
      WW_NOM_FICHIER = P_NOM_FICHIER /// '.docx'
   SINON
      WW_NOM_FICHIER = P_NOM_FICHIER /// '.pdf'
   FIN

   TRAITER_PROC PROC_CHEMIN
   TRAITER_PROC PROC_CHEMIN_FICHIER

   * --- Visualisation du document va ouvrir le dossier windows         
   * -- convertir le doc qui a été modifié en pdf
   P_TYPE_ORIGINE = 'WIN'
   P_FICHIER_DOC = WP_PROC_CHEMIN /// P_NOM_FICHIER /// '.docx'
   
   P_TYPE_DESTINATION = 'WIN'
   P_FICHIER_PDF = WP_PROC_CHEMIN /// P_NOM_FICHIER /// '.pdf'
   P_SUPPRESSION_DOC = 'N'  
   
   SI WW_TYP_TLT = 'T';'X' 
      WW_VISU_FICHIER = P_FICHIER_PDF
   SINON 
      WW_VISU_FICHIER = P_FICHIER_DOC
   FIN 

   * chemin du fichier
   P_CHEMIN = WW_VISU_FICHIER
   * Webservice de suppression
   APPELER YYY221 P_CHEMIN
   
   * suppression dans LNCCHD        

   * supprimer le pdf dans lncchd
   LNCCHD_ID1 = 'SINCOU'
   LNCCHD_ID2 = WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM
   SI WW_TYP_SBR <> *BLANK
      LNCCHD_ID2 = LNCCHD_ID2///'_'///WW_TYP_SBR
   FIN
   LNCCHD_ID3 = WW_TYP_NUC
   LNCCHD_ID4 = 0
   LNCCHD_CHD = P_CHI
   LNCCHD_DOC = P_NOM_FICHIER
   LNCCHD_EXT = 'PDF'
   LNCCHD_FPV = 0
   LNCCHD_CRU = SINCOU_CRU
   LNCCHD_CRA = SINCOU_CRA
   LNCCHD_CRJ = SINCOU_CRM
   LNCCHD_CRM = SINCOU_CRJ
   LNCCHD_CRH = 0
   LNCCHD_MJU = SINCOU_MJU
   LNCCHD_MJA = SINCOU_MJA
   LNCCHD_MJM = SINCOU_MJM
   LNCCHD_MJJ = SINCOU_MJJ
   LNCCHD_MJH = 0
   LNCCHD_FPC = ''
   SUPPRIMER_SQL LNCCHD *COND(LNCCHD_ID3 = :WW_TYP_NUC)
 
            
         
    
   
SINON
   TRAITER_PROC PROC_SUA2
   
   SI WW_TYP_SBR <> *BLANK
      P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_SBR///'_'///WW_TYP_COU
   SINON
      P_NOM_FICHIER = WW_TYP_LET///'_'///WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM///'_'///WW_TYP_COU
   FIN
   
   SI WW_TYP_TLT = 'T'
      WW_NOM_FICHIER = P_NOM_FICHIER /// '.pdf'
      P_TYPE_DOCUMENT = 'PDF'
   SINON
      WW_NOM_FICHIER = P_NOM_FICHIER /// '.pdf'   
      P_TYPE_DOCUMENT = 'PDF'
   FIN

   TRAITER_PROC PROC_CHEMIN
   TRAITER_PROC PROC_CHEMIN_FICHIER

   *SI P_CODE_RETOUR = 'OK'                      

   * --- Visualisation du document va ouvrir le dossier windows         
   * -- convertir le doc qui a été modifié en pdf
   P_TYPE_ORIGINE = 'WIN'
   P_FICHIER_DOC = WP_PROC_CHEMIN /// P_NOM_FICHIER /// '.docx'
   
   P_TYPE_DESTINATION = 'WIN'
   P_FICHIER_PDF = WP_PROC_CHEMIN /// P_NOM_FICHIER /// '.pdf'
   P_SUPPRESSION_DOC = 'N'  
   
   SI WW_TYP_TLT = 'T' 
      WW_VISU_FICHIER = P_FICHIER_PDF
   SINON 
      WW_VISU_FICHIER = P_FICHIER_PDF
   FIN
   
   * chemin du fichier
   P_CHEMIN = WW_VISU_FICHIER
   * Webservice de suppression
   APPELER YYY221 P_CHEMIN
   
   * suppression dans LNCCHD        
  
   * supprimer le pdf dans lncchd
   LNCCHD_ID1 = 'COURRI'
   LNCCHD_ID2 = WW_TYP_SUA_ALPHA///'_'///WW_TYP_NUM
   SI WW_TYP_SBR <> *BLANK
      LNCCHD_ID2 = LNCCHD_ID2///'_'///WW_TYP_SBR
   FIN
   LNCCHD_ID3 = WW_TYP_COU
   LNCCHD_ID4 = 0
   LNCCHD_CHD = P_CHI
   LNCCHD_DOC = P_NOM_FICHIER
   LNCCHD_EXT = 'PDF'
   LNCCHD_FPV = 0
   LNCCHD_CRU = SINCOU_CRU
   LNCCHD_CRA = SINCOU_CRA
   LNCCHD_CRJ = SINCOU_CRM
   LNCCHD_CRM = SINCOU_CRJ
   LNCCHD_CRH = 0
   LNCCHD_MJU = SINCOU_MJU
   LNCCHD_MJA = SINCOU_MJA
   LNCCHD_MJM = SINCOU_MJM
   LNCCHD_MJJ = SINCOU_MJJ
   LNCCHD_MJH = 0
   LNCCHD_FPC = ''
   SUPPRIMER_SQL LNCCHD *COND(LNCCHD_ID3 = :WW_TYP_COU)
   
   
FIN
